#version 150

uniform vec4 lightPos;
uniform vec4 lightColor;
uniform mat4 light_viewMatrix;
uniform mat4 light_projMatrix;
uniform vec3 lightHitherYon;
uniform sampler2D  shadowbuffer;
uniform sampler2D diffuse_texture;
uniform vec4 eyePos;

in vec4 v_texcoord;
in vec4 v_worldPos;
in vec4 v_normal;


//uniform vec4 lightPos;
//uniform vec2 lightHitherYon;
//uniform float bias;
out vec4 gl_FragColor;
out vec4 color;
void main(){
    
    vec4 tmp=  v_worldPos*light_viewMatrix;
//gl_FragColor = tmp;
//gl_FragColor.a = 1.0;
//return;

    float z1=-tmp.z;




    tmp=tmp*light_projMatrix;
    tmp/=tmp.w;

    tmp.xy =  (tmp.xy+vec2(1))*.5  ;

            
//if( tmp.x<0 || tmp.x > 1 || tmp.y < 0 || tmp.y>1 ){
//gl_FragColor = vec4(1,0,1,1);
//return;




    tmp = texture2D(shadowbuffer,tmp.xy);
    float z2 = tmp.r;

    z2 = lightHitherYon[0] + z2 * (lightHitherYon[1]-lightHitherYon[0]);


    vec3 N=normalize(v_normal.xyz);
        
    //vec3 L = lightPos.xyz-v_worldPos.xyz;
    //float z1 = length(L);
    //L=normalize(L);
    
    //vec4 tmp = texture2D(shadowbuffer, -L.xy);
    //float z2 = tmp.r;
 
    //gl_FragColor = vec4(tmp.rgb,1.0);
    //return;
    
    //gl_FragColor = vec4(z2,z2,z2,1.0);
    //return;
    
    //z2 = lightHitherYon[0] + z2 * (lightHitherYon[1]-lightHitherYon[0]);
    
    float shadowfactor=1.0;
    if( z1 > z2+0.7 ){
        //in shadow
//gl_FragColor = vec4(1,1,0,1);
//return;
        shadowfactor = 0.0;
    }
    vec3 L=  lightPos.xyz-v_worldPos.xyz;

    float dp = clamp( dot(N,normalize(L)) , 0.0, 1.0);
    vec4 texc = texture2D(diffuse_texture,v_texcoord.st);

    
    gl_FragColor.rgb = shadowfactor * dp * texc.rgb;
    gl_FragColor.a = 1.0;


// gl_FragColor.rgb =vec3(z1/100.0);

//gl_FragColor = vec4(tmp.xy,0,1);
return;

}
